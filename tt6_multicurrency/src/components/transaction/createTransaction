import React, { useState }  from 'react';
import Box from '@mui/material/Box';
import InputLabel from '@mui/material/InputLabel';
import FormControl from '@mui/material/FormControl';
import NativeSelect from '@mui/material/NativeSelect';
import TextField from '@mui/material/TextField';
import InputAdornment from '@mui/material/InputAdornment';
import OutlinedInput from '@mui/material/OutlinedInput';

import { Dropdown } from 'rsuite';

export default function Select() {
  var exchangeRate =
  [
    {
      "id": 1,
      "base_currency": "SGD",
      "exchange_currency": "CAD",
      "rate": 0.9255
    },
    {
      "id": 2,
      "base_currency": "SGD",
      "exchange_currency": "CNH",
      "rate": 4.7868
    },
  ];
  const [mySum, setMySum] = useState(0);
  const [desiredSum, setMyDesiredSum] = useState(0);
  var data =["SGD", "CAD", "MYR", "CNH", "EUR"];
  var toCurrency = data[0];
  var fromCurrency = data[0];
  const onSubmit = (event) => {};
  const handleChange = (prop) => (event) => {
    setMySum({mySum, [prop]: event.target.value});
  };
  function handleFrom(event){
    exchangeRate.filter((item) => {
      if(item.base_currency === event){
        return fromCurrency(item.base_currency);
      } 
    })
  };
  function handleTo(event){
    exchangeRate.filter((item) => {
      if(item.exchange_currency === event){
        toCurrency(item.exchange_currency)
        if(item.base_currency === fromCurrency)
          return setMyDesiredSum(item.rate * fromCurrency);
      } 
    })
  };
  return (
    <div>
      <form onSubmit={onSubmit()}>
      <FormControl sx={{ minWidth: 120 }}>
        <InputLabel variant="standard">
          From Currency:
        </InputLabel>
        <NativeSelect onChange={e => handleFrom(e.target.value)}>
          {data.map((message) => <option value={message}>{message}</option>)}
        </NativeSelect>
        <OutlinedInput
            id="outlined-adornment-amount"
            value={mySum}
            onChange={e => setMySum(e.target.value)}
            startAdornment={<InputAdornment position="start">$</InputAdornment>}
          />
      </FormControl>
      <FormControl sx={{ minWidth: 120 }}>
      <InputLabel variant="standard">
          To Currency:
        </InputLabel>
        <NativeSelect onChange={handleTo}>
          {data.map((message) => <option value={message}>{message}</option>)}
        </NativeSelect>
        <OutlinedInput
            id="outlined-adornment-amount"
            startAdornment={<InputAdornment position="start">$</InputAdornment>}
          />
        </FormControl>
      <button type="submit">Convert</button>
      </form>
    </div>
  );
}

